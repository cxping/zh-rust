initSidebarItems({"enum":[["Which","两个 vectors 之一的索引。"]],"macro":[["simd_swizzle","通过从要使用的源 vector 或 vectors 的 lanes 中选择值来构造新的 vector。 当 swizzling 一个 vector 时，结果 vector 的索引由 `usize` 的 `const` 数组表示，如 [`Swizzle`]。 当 swizzling 两个 vectors 时，索引由 [`Which`] 的 `const` 数组表示，如 [`Swizzle2`]。"]],"struct":[["LaneCount","表示 vector lane 数的类型。"],["Mask","`Element` 指定宽度的 `LANES` 元素的 SIMD vector 掩码。"],["Simd","`T` 类型的 `LANES` 元素的 SIMD vector。"]],"trait":[["MaskElement","可用作 SIMD 掩码元素的类型的标记 trait。"],["SimdElement","可用作 SIMD vector 元素的类型的标记 trait。 SAFETY: 这个 trait 在实现时断言编译器可以将标记类型作为元素的 `#[repr(simd)]` 结构体单态化。 严格地说，如果 vector 不会被错误编译，则 impl 是有效的。 实际上，如果 vector 无法编译，那么实现它对用户是不友好的，即使允许用户尝试并没有破坏健全性保证。"],["SupportedLaneCount","用于 vector lane 计数的助手 trait。"],["Swizzle","从另一个 vector 的元素创建一个 vector。"],["Swizzle2","从另外两个 vectors 的元素创建一个 vector。"]],"type":[["f32x16","16 个 `f32` 值的 Vector"],["f32x2","两个 `f32` 值的 Vector"],["f32x4","四个 `f32` 值的 Vector"],["f32x8","八个 `f32` 值的 Vector"],["f64x2","两个 `f64` 值的 Vector"],["f64x4","四个 `f64` 值的 Vector"],["f64x8","八个 `f64` 值的 Vector"],["i16x16","16 个 `i16` 值的 Vector"],["i16x2","两个 `i16` 值的 Vector"],["i16x32","32 个 `i16` 值的 Vector"],["i16x4","四个 `i16` 值的 Vector"],["i16x8","八个 `i16` 值的 Vector"],["i32x16","16 个 `i32` 值的 Vector"],["i32x2","两个 `i32` 值的 Vector"],["i32x4","四个 `i32` 值的 Vector"],["i32x8","八个 `i32` 值的 Vector"],["i64x2","两个 `i64` 值的 Vector"],["i64x4","四个 `i64` 值的 Vector"],["i64x8","八个 `i64` 值的 Vector"],["i8x16","16 个 `i8` 值的 Vector"],["i8x32","32 个 `i8` 值的 Vector"],["i8x4","四个 `i8` 值的 Vector"],["i8x64","64 个 `i8` 值的 Vector"],["i8x8","八个 `i8` 值的 Vector"],["isizex2","两个 `isize` 值的 Vector"],["isizex4","四个 `isize` 值的 Vector"],["isizex8","八个 `isize` 值的 Vector"],["mask16x16","16 个 16 位掩码的 Vector"],["mask16x32","32 个 16 位掩码的 Vector"],["mask16x4","四个 16 位掩码的 Vector"],["mask16x8","八个 16 位掩码的 Vector"],["mask32x16","16 个 32 位掩码的 Vector"],["mask32x2","两个 32 位掩码的 Vector"],["mask32x4","四个 32 位掩码的 Vector"],["mask32x8","八个 32 位掩码的 Vector"],["mask64x2","两个 64 位掩码的 Vector"],["mask64x4","四个 64 位掩码的 Vector"],["mask64x8","八个 64 位掩码的 Vector"],["mask8x16","16 个 8 位掩码的 Vector"],["mask8x32","32 个 8 位掩码的 Vector"],["mask8x64","16 个 8 位掩码的 Vector"],["mask8x8","八个 8 位掩码的 Vector"],["masksizex2","两个指针宽度掩码的 Vector"],["masksizex4","四个指针宽度掩码的 Vector"],["masksizex8","八个指针宽度掩码的 Vector"],["u16x16","16 个 `u16` 值的 Vector"],["u16x2","两个 `u16` 值的 Vector"],["u16x32","32 个 `u16` 值的 Vector"],["u16x4","四个 `u16` 值的 Vector"],["u16x8","八个 `u16` 值的 Vector"],["u32x16","16 个 `u32` 值的 Vector"],["u32x2","两个 `u32` 值的 Vector"],["u32x4","四个 `u32` 值的 Vector"],["u32x8","八个 `u32` 值的 Vector"],["u64x2","两个 `u64` 值的 Vector"],["u64x4","四个 `u64` 值的 Vector"],["u64x8","八个 `u64` 值的 Vector"],["u8x16","16 个 `u8` 值的 Vector"],["u8x32","32 个 `u8` 值的 Vector"],["u8x4","四个 `u8` 值的 Vector"],["u8x64","64 个 `u8` 值的 Vector"],["u8x8","八个 `u8` 值的 Vector"],["usizex2","两个 `usize` 值的 Vector"],["usizex4","四个 `usize` 值的 Vector"],["usizex8","八个 `usize` 值的 Vector"]]});